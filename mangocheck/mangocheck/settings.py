"""
Django settings for mangocheck project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-o20!7gfs+y5p0dwgny%%qofcatm8r-u6!l2iiq$uapsx)g@4x9"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    "*",
    'localhost',
]


# Application definition


INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # "django.contrib.sites",
    "app",
    "social_django",
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "allauth.socialaccount.providers.google",  # For Google Login
    "allauth.socialaccount.providers.facebook",  # For Facebook Login
    "allauth.socialaccount.providers.github",
    "oauth2_provider",
    "rest_framework",
    "rest_framework.authtoken",
    "dj_rest_auth",
]

SITE_ID = 1

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    
    'app.middleware.CustomAuthMiddleware',
    
]

ROOT_URLCONF = "mangocheck.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": ['BASE_DIR / "templates"'],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "social_django.context_processors.backends", 
                "social_django.context_processors.login_redirect",
            ],
        },
    },
]

WSGI_APPLICATION = "mangocheck.wsgi.application"

SOCIAL_ACCOUNT_PROVIDER={
    'google':{
        'SCOPE':[
            'profile',
            'email'
        ],
        
        'AUTH_PARAMS':{
            'access_type':'online',
        }
    },
    "github": {
        "APP": {
            "client_id":os.environ.get("SOCIAL_AUTH_GITHUB_KEY"),
            "secret":  os.environ.get("SOCIAL_AUTH_GITHUB_SECRET"),
            "key": "",
            "redirect_uri": "http://localhost:8000/dashbord",
        }
    }
        
}
# Database
DATABASES = {
    
    'default': {
        'ENGINE': 'djongo',
        'NAME': 'test_mongo', 
        'CLIENT': {
            'host': 'mongodb+srv://kmnaveen777:naveen@atlas.eokhe.mongodb.net/',
           
            'authMechanism': 'SCRAM-SHA-1',
        }
    }
}

STATIC_URL = '/static/'


# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.sqlite3",
#         "NAME": BASE_DIR / "db.sqlite3",
#     }
# }

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

AUTHENTICATION_BACKENDS = [
    'social_core.backends.google.GoogleOAuth2',
    'social_core.backends.facebook.FacebookOAuth2',
    'social_core.backends.github.GithubOAuth2',
    'django.contrib.auth.backends.ModelBackend',
  
]




import os

def load_env_file(file_path):
    """Read .env file and load variables into environment"""
    if os.path.exists(file_path):
        with open(file_path) as f:
            for line in f:
                key, value = line.strip().split("=", 1)
                os.environ[key] = value

# Provide the absolute path to the .env file
env_path = os.path.join(os.path.dirname(os.path.dirname(__file__)), ".env")
load_env_file(env_path)


SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = os.environ.get("SOCIAL_AUTH_GOOGLE_OAUTH2_KEY")
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = os.environ.get("SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET")

SOCIAL_AUTH_FACEBOOK_KEY = os.environ.get("SOCIAL_AUTH_FACEBOOK_KEY")
SOCIAL_AUTH_FACEBOOK_SECRET = os.environ.get("SOCIAL_AUTH_FACEBOOK_SECRET")

SOCIAL_AUTH_GITHUB_KEY = os.environ.get("SOCIAL_AUTH_GITHUB_KEY")
SOCIAL_AUTH_GITHUB_SECRET = os.environ.get("SOCIAL_AUTH_GITHUB_SECRET")






# SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '505194174692-uj1sdt7mr1gpr9rqdkdbt0cko20lvg68.apps.googleusercontent.com'
# SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = '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'

# SOCIAL_AUTH_FACEBOOK_KEY = '598257113091958'
# SOCIAL_AUTH_FACEBOOK_SECRET = 'e1dc6f365c6ca0601d45ab890c026811'



# SOCIAL_AUTH_GITHUB_KEY = 'Ov23liQrA0L7MNWHpBCt'
# SOCIAL_AUTH_GITHUB_SECRET = '6f98a92aed078652978606d39f3e2ab5a0a2ce46'

SOCIAL_AUTH_GITHUB_SCOPE = ['user:email']
# LOGIN_URL = 'dashboard'
# LOGIN_REDIRECT_URL = 'dashboard'


LOGOUT_URL='/'
ACCOUNT_LOGOUT_REDIRECT_URL='/'
ACCOUNT_DEFAULT_HTTP_PROTOCOL = "http"  
LOGIN_REDIRECT_URL = "dashbord"  
LOGOUT_REDIRECT_URL = "/"


SOCIAL_AUTH_PIPELINE = (
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.auth_allowed',
    'social_core.pipeline.social_auth.social_user',
    'social_core.pipeline.user.get_username',
    'social_core.pipeline.user.create_user',
    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
    'social_core.pipeline.user.user_details',
)

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

REST_USE_JWT = True
ACCOUNT_EMAIL_VERIFICATION = "none"

SOCIALACCOUNT_PROVIDERS = {
    "github": {
        "APP": {
            "client_id": os.environ.get("SOCIAL_AUTH_GITHUB_KEY"),
            "secret":  os.environ.get("SOCIAL_AUTH_GITHUB_SECRET"),
            "key": "",
            "redirect_uri": "http://localhost:8000/dashbord",
        }
    }
}


SOCIAL_AUTH_REDIRECT_IS_HTTPS = False



